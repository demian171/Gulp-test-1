@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700&display=swap");
body {
  font-family: Roboto;
  font-size: 14px;
}

main {
  width: 1170px;
  max-width: calc(100% - 30px);
  margin: 0 auto;
  display: grid;
  transition: all 0.5s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: 1px solid gray;
  font-size: 14px;
}
main img {
  width: 100%;
}

.header {
  grid-area: header;
}
.header .navbar {
  display: flex;
  align-items: center;
  justify-content: space-around;
  max-width: 900px;
  margin: 0 auto;
  height: 60px;
  font-size: 16px;
}
.header .navbar a {
  font-style: normal;
  font-weight: normal;
  font-size: 11px;
  line-height: 22px;
  /* identical to box height, or 200% */
  display: flex;
  align-items: center;
  letter-spacing: 1.1px;
  text-transform: uppercase;
  text-decoration: none;
  color: #4E4E4E;
}

.content {
  grid-area: content;
  background: #d48d8d;
}
.content .news {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}
.content .news .news_item {
  padding: 15px;
  border: 1px solid gray;
  display: grid;
  grid-template-columns: 140px auto;
  background: white;
}
.content .news .news_item .news__item_txt_block {
  padding-left: 10px;
}
.content .news .news_item .news__item_txt_block .txt_block_header {
  font-weight: bold;
  font-size: 16px;
  line-height: 30px;
  color: #4E4E4E;
}
.content .news .news_item .news__item_txt_block .txt_block_info {
  font-size: 12px;
  line-height: 20px;
  color: #7C7C7C;
}
.content .news .news_item .news__item_txt_block .txt_block_text {
  font-size: 14px;
  line-height: 26px;
  color: #5C5C5C;
}

.footer {
  grid-area: footer;
}

main .wrapper {
  display: grid;
  grid-gap: 10px;
  grid-template-areas: "header" "content" "footer ";
  background-color: #fff;
  color: #444;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFRLHVKQUFBO0FBT1I7RUFDRSxtQkFBQTtFQUNBLGVBQUE7QUNMRjs7QURRQTtFQUNFLGFBQUE7RUFDQSw0QkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0VBQ0Esb0JBQUE7RUFDQSx5QkFBQTtFQUFBLHNCQUFBO0VBQUEscUJBQUE7RUFBQSxpQkFBQTtFQUVBLHNCQUFBO0VBQ0EsZUFBQTtBQ05GO0FET0U7RUFDRSxXQUFBO0FDTEo7O0FEVUE7RUFDRSxpQkFBQTtBQ1BGO0FEU0U7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDUEo7QURRSTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQ0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUNBLGNBQUE7QUNOTjs7QURXQTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7QUNSRjtBRFNFO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsMkJBQUE7QUNQSjtBRFFJO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGlDQUFBO0VBQ0EsaUJBQUE7QUNOTjtBRE9NO0VBQ0Usa0JBQUE7QUNMUjtBRE1RO0VBQ0UsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FDSlY7QURNUTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUNKVjtBRE1RO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQ0pWOztBRFdBO0VBQ0UsaUJBQUE7QUNSRjs7QURZQTtFQUNFLGFBQUE7RUFDQSxjQUFBO0VBRUEsaURBQ1E7RUFHUixzQkFBQTtFQUNBLFdBQUE7QUNiRiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzppdGFsLHdnaHRAMCwxMDA7MCwzMDA7MCw0MDA7MCw1MDA7MCw3MDA7MCw5MDA7MSwxMDA7MSwzMDA7MSw0MDA7MSw1MDA7MSw3MDAmZGlzcGxheT1zd2FwJyk7XHJcblxyXG4vL3ZhcmlhYmxlc1xyXG4kcmVzb2x1dGlvbnM6IDE2MDBweCwgMTIwMHB4LCAxMTY4cHgsIDc2OHB4LCAzMjBweDtcclxuJGNvbnN0OiAxNTA7XHJcblxyXG4vL3N0eWxlc1xyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxubWFpbiB7XHJcbiAgd2lkdGg6IDExNzBweDtcclxuICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgdHJhbnNpdGlvbjogYWxsIC41cztcclxuICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICAvL2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHdoaXRlLCBibGFjayk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi5oZWFkZXIge1xyXG4gIGdyaWQtYXJlYTogaGVhZGVyO1xyXG4gIC8vYmFja2dyb3VuZDogIzcwZDQ3MDtcclxuICAubmF2YmFyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBhIHtcclxuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAvKiBpZGVudGljYWwgdG8gYm94IGhlaWdodCwgb3IgMjAwJSAqL1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogMS4xcHg7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgY29sb3I6ICM0RTRFNEU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgZ3JpZC1hcmVhOiBjb250ZW50O1xyXG4gIGJhY2tncm91bmQ6ICNkNDhkOGQ7XHJcbiAgLm5ld3Mge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcclxuICAgIC5uZXdzX2l0ZW0ge1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG4gICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE0MHB4IGF1dG87XHJcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAubmV3c19faXRlbV90eHRfYmxvY2sge1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgICAudHh0X2Jsb2NrX2hlYWRlciB7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgY29sb3I6ICM0RTRFNEU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50eHRfYmxvY2tfaW5mbyB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgICAgICAgIGNvbG9yOiAjN0M3QzdDO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudHh0X2Jsb2NrX3RleHQge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XHJcbiAgICAgICAgICBjb2xvcjogIzVDNUM1QztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mb290ZXIge1xyXG4gIGdyaWQtYXJlYTogZm9vdGVyO1xyXG4gIC8vYmFja2dyb3VuZDogIzg3YWFiZDtcclxufVxyXG5cclxubWFpbiAud3JhcHBlciB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLWdhcDogMTBweDtcclxuICAvL2dyaWQtdGVtcGxhdGUtY29sdW1uczogMTIwcHggMTIwcHg7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcclxuICAgICAgICAgIFwiaGVhZGVyXCJcclxuICAgICAgICAgIFwiY29udGVudFwiXHJcbiAgICAgICAgICBcImZvb3RlciBcIjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGNvbG9yOiAjNDQ0O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNzAwOzAsOTAwOzEsMTAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNzAwJmRpc3BsYXk9c3dhcFwiKTtcbmJvZHkge1xuICBmb250LWZhbWlseTogUm9ib3RvO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbm1haW4ge1xuICB3aWR0aDogMTE3MHB4O1xuICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZ3JpZDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICBmb250LXNpemU6IDE0cHg7XG59XG5tYWluIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaGVhZGVyIHtcbiAgZ3JpZC1hcmVhOiBoZWFkZXI7XG59XG4uaGVhZGVyIC5uYXZiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWF4LXdpZHRoOiA5MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGhlaWdodDogNjBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuLmhlYWRlciAubmF2YmFyIGEge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIC8qIGlkZW50aWNhbCB0byBib3ggaGVpZ2h0LCBvciAyMDAlICovXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGxldHRlci1zcGFjaW5nOiAxLjFweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzRFNEU0RTtcbn1cblxuLmNvbnRlbnQge1xuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGJhY2tncm91bmQ6ICNkNDhkOGQ7XG59XG4uY29udGVudCAubmV3cyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xufVxuLmNvbnRlbnQgLm5ld3MgLm5ld3NfaXRlbSB7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMTQwcHggYXV0bztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG4uY29udGVudCAubmV3cyAubmV3c19pdGVtIC5uZXdzX19pdGVtX3R4dF9ibG9jayB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cbi5jb250ZW50IC5uZXdzIC5uZXdzX2l0ZW0gLm5ld3NfX2l0ZW1fdHh0X2Jsb2NrIC50eHRfYmxvY2tfaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjNEU0RTRFO1xufVxuLmNvbnRlbnQgLm5ld3MgLm5ld3NfaXRlbSAubmV3c19faXRlbV90eHRfYmxvY2sgLnR4dF9ibG9ja19pbmZvIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgY29sb3I6ICM3QzdDN0M7XG59XG4uY29udGVudCAubmV3cyAubmV3c19pdGVtIC5uZXdzX19pdGVtX3R4dF9ibG9jayAudHh0X2Jsb2NrX3RleHQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICBjb2xvcjogIzVDNUM1Qztcbn1cblxuLmZvb3RlciB7XG4gIGdyaWQtYXJlYTogZm9vdGVyO1xufVxuXG5tYWluIC53cmFwcGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1nYXA6IDEwcHg7XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaGVhZGVyXCIgXCJjb250ZW50XCIgXCJmb290ZXIgXCI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGNvbG9yOiAjNDQ0O1xufSJdfQ== */
